<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atom.crm.workbench.mapper.TranMapper">
  <resultMap id="BaseResultMap" type="com.atom.crm.workbench.bean.Tran">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 27 20:23:01 CST 2022.
    -->
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="owner" jdbcType="CHAR" property="owner" />
    <result column="money" jdbcType="VARCHAR" property="money" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="expected_date" jdbcType="CHAR" property="expectedDate" />
    <result column="customer_id" jdbcType="CHAR" property="customerId" />
    <result column="stage" jdbcType="VARCHAR" property="stage" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="activity_id" jdbcType="CHAR" property="activityId" />
    <result column="contacts_id" jdbcType="CHAR" property="contactsId" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="CHAR" property="createTime" />
    <result column="edit_by" jdbcType="VARCHAR" property="editBy" />
    <result column="edit_time" jdbcType="CHAR" property="editTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="contact_summary" jdbcType="VARCHAR" property="contactSummary" />
    <result column="next_contact_time" jdbcType="CHAR" property="nextContactTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Aug 27 20:23:01 CST 2022.
    -->
    id, owner, money, name, expected_date, customer_id, stage, type, source, activity_id, 
    contacts_id, create_by, create_time, edit_by, edit_time, description, contact_summary, 
    next_contact_time
  </sql>

  <select id="selectTranByContactsIdForDetail" parameterType="String" resultMap="BaseResultMap">
    select
      t.id,
      t.money,
      t.name,
      t.expected_date,
      dv1.value as stage,
      dv2.value as type
    from tbl_tran t
    join tbl_dic_value dv1
    on t.stage=dv1.id
    left join tbl_dic_value dv2
    on t.type=dv2.id
    where t.contacts_id=#{contactsId}
  </select>

  <select id="selectTranStageNameList" resultType="String">
    select distinct dv.value
    from tbl_tran t
    join tbl_dic_value dv
    on t.stage=dv.id;
  </select>

  <select id="selectStageNameAndCountList" resultType="FunnelVO">
    select count(*) as value, dv.value as name
    from tbl_tran t
    join tbl_dic_value dv
    on t.stage=dv.id
    group by t.stage
  </select>

  <select id="selectTranById02" parameterType="String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from tbl_tran
    where id=#{id}
  </select>

  <update id="updateATranStage" parameterType="Tran">
    update tbl_tran
    set
      stage=#{stage},
      edit_by=#{editBy},
      edit_time=#{editTime}
    where id=#{id}
  </update>

  <select id="selectTranById" parameterType="String" resultMap="BaseResultMap">
    select
      t.id,
      u1.name as owner,
      t.money,
      t.name,
      t.expected_date,
      cus.name as customer_id,
      dv1.value as stage,
      dv2.value as type,
      dv3.value as source,
      a.name as activity_id,
      con.fullname as contacts_id,
      u2.name as create_by,
      t.create_time,
      u3.name as edit_by,
      t.edit_time,
      t.description,
      t.contact_summary,
      t.next_contact_time
    from tbl_tran t
    join tbl_user u1
    on t.owner=u1.id
    join tbl_customer cus
    on t.customer_id=cus.id
    join tbl_dic_value dv1
    on t.stage=dv1.id
    left join tbl_dic_value dv2
    on t.type=dv2.id
    left join tbl_dic_value dv3
    on t.source=dv3.id
    left join tbl_activity a
    on t.activity_id=a.id
    left join tbl_contacts con
    on t.contacts_id=con.id
    join tbl_user u2
    on t.create_by=u2.id
    left join tbl_user u3
    on t.edit_by=u3.id
    where t.id=#{id}
  </select>

  <select id="selectCountByCondition" parameterType="map" resultType="int">
    select count(*)
    from tbl_tran t
    join tbl_user u1
    on t.owner=u1.id
    join tbl_customer cus
    on t.customer_id=cus.id
    left join tbl_contacts con
    on t.contacts_id=con.id
    <where>
      <if test="owner != null and owner != ''">
        u1.name like concat('%',#{owner},'%')
      </if>
      <if test="name != null and name != ''">
        and t.name like concat('%',#{name},'%')
      </if>
      <if test="customerName != null and customerName != ''">
        and cus.name like concat('%',#{customerName},'%')
      </if>
      <if test="stage != null and stage != ''">
        and t.stage=#{stage}
      </if>
      <if test="type != null and type != ''">
        and t.type=#{type}
      </if>
      <if test="source != null and source != ''">
        and t.source=#{source}
      </if>
      <if test="contactsName != null and contactsName != ''">
        and con.fullname like concat('%',#{contactsName},'%')
      </if>
    </where>
  </select>
  
  <select id="selectTranByCondition" parameterType="map" resultMap="BaseResultMap">
    select
      t.id,
      u1.name as owner,
      t.money,
      t.name,
      t.expected_date,
      cus.name as customer_id,
      dv1.value as stage,
      dv2.value as type,
      dv3.value as source,
      t.activity_id,
      con.fullname as contacts_id,
      u2.name as create_by,
      t.create_time,
      u3.name as edit_by,
      t.edit_time,
      t.description,
      t.contact_summary,
      t.next_contact_time
    from tbl_tran t
    join tbl_user u1
    on t.owner=u1.id
    join tbl_customer cus
    on t.customer_id=cus.id
    join tbl_dic_value dv1
    on t.stage=dv1.id
    left join tbl_dic_value dv2
    on t.type=dv2.id
    left join tbl_dic_value dv3
    on t.source=dv3.id
    left join tbl_contacts con
    on t.contacts_id=con.id
    join tbl_user u2
    on t.create_by=u2.id
    left join tbl_user u3
    on t.edit_by=u3.id
    <where>
        <if test="owner != null and owner != ''">
          u1.name like concat('%',#{owner},'%')
        </if>
        <if test="name != null and name != ''">
          and t.name like concat('%',#{name},'%')
        </if>
        <if test="customerName != null and customerName != ''">
          and cus.name like concat('%',#{customerName},'%')
        </if>
        <if test="stage != null and stage != ''">
          and t.stage=#{stage}
        </if>
        <if test="type != null and type != ''">
          and t.type=#{type}
        </if>
        <if test="source != null and source != ''">
          and t.source=#{source}
        </if>
        <if test="contactsName != null and contactsName != ''">
          and con.fullname like concat('%',#{contactsName},'%')
        </if>
    </where>
    order by t.create_time desc
    limit #{startNo},#{pageSize}
  </select>

  <select id="selectAllTranForIndex" resultMap="BaseResultMap">
    select
      t.id,
      u1.name as owner,
      t.money,
      t.name,
      t.expected_date,
      cus.name as customer_id,
      dv1.value as stage,
      dv2.value as type,
      dv3.value as source,
      t.activity_id,
      con.fullname as contacts_id,
      u2.name as create_by,
      t.create_time,
      u3.name as edit_by,
      t.edit_time,
      t.description,
      t.contact_summary,
      t.next_contact_time
    from tbl_tran t
    join tbl_user u1
    on t.owner=u1.id
    join tbl_customer cus
    on t.customer_id=cus.id
    join tbl_dic_value dv1
    on t.stage=dv1.id
    left join tbl_dic_value dv2
    on t.type=dv2.id
    left join tbl_dic_value dv3
    on t.source=dv3.id
    left join tbl_contacts con
    on t.contacts_id=con.id
    join tbl_user u2
    on t.create_by=u2.id
    left join tbl_user u3
    on t.edit_by=u3.id
    order by t.create_time desc
  </select>

  <delete id="deleteTranById" parameterType="String">
    delete from tbl_tran
    where id=#{id}
  </delete>

  <select id="selectTranByCustomerId" parameterType="String" resultMap="BaseResultMap">
    select
      t.id,
      u1.name as owner,
      t.money,
      t.name,
      t.expected_date,
      t.customer_id,
      dv1.value as stage,
      dv2.value as type,
      dv3.value as source,
      t.activity_id,
      t.contacts_id,
      u2.name as create_by,
      t.create_time,
      u3.name as edit_by,
      t.edit_time,
      t.description,
      t.contact_summary,
      t.next_contact_time
    from tbl_tran t
    join tbl_user u1
    on t.owner=u1.id
    join tbl_dic_value dv1
    on t.stage=dv1.id
    left join tbl_dic_value dv2
    on t.type=dv2.id
    left join tbl_dic_value dv3
    on t.source=dv3.id
    join tbl_user u2
    on t.create_by=u2.id
    left join tbl_user u3
    on t.edit_by=u3.id
    where t.customer_id=#{customerId}
    order by t.create_time desc
  </select>

  <insert id="insertTran" parameterType="Tran">
    insert into tbl_tran
    values(
      #{id},
      #{owner},
      #{money},
      #{name},
      #{expectedDate},
      #{customerId},
      #{stage},
      #{type},
      #{source},
      #{activityId},
      #{contactsId},
      #{createBy},
      #{createTime},
      #{editBy},
      #{editTime},
      #{description},
      #{contactSummary},
      #{nextContactTime}
          )
  </insert>
</mapper>