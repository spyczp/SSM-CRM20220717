<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atom.crm.workbench.mapper.ActivityMapper">
  <resultMap id="BaseResultMap" type="com.atom.crm.workbench.bean.Activity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 21 09:20:33 CST 2022.
    -->
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="owner" jdbcType="CHAR" property="owner" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="start_date" jdbcType="CHAR" property="startDate" />
    <result column="end_date" jdbcType="CHAR" property="endDate" />
    <result column="cost" jdbcType="VARCHAR" property="cost" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="CHAR" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="edit_time" jdbcType="CHAR" property="editTime" />
    <result column="edit_by" jdbcType="VARCHAR" property="editBy" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 21 09:20:33 CST 2022.
    -->
        id,
        owner,
        name,
        start_date,
        end_date,
        cost,
        description,
        create_time,
        create_by,
        edit_time,
        edit_by
  </sql>

  <select id="selectActivityHasNotRelateWithTheContacts" parameterType="map" resultMap="BaseResultMap">
    select
      a.id,
      u1.name as owner,
      a.name,
      a.start_date,
      a.end_date,
      a.cost,
      a.description,
      a.create_time,
      u2.name as create_by,
      a.edit_time,
      u3.name as edit_by
    from tbl_activity a
    join tbl_user u1
    on a.owner=u1.id
    join tbl_user u2
    on a.create_by=u2.id
    left join tbl_user u3
    on a.edit_by=u3.id
    left join tbl_contacts_activity_relation car
    on a.id=car.activity_id
    where a.name like concat('%',#{name},'%')
    and (car.contacts_id is null or car.contacts_id!=#{contactsId})
  </select>

  <select id="selectActivityListByContactsIdForDetail" parameterType="String" resultMap="BaseResultMap">
    select
        a.id,
        u1.name as owner,
        a.name,
        a.start_date,
        a.end_date
    from tbl_activity a
    join tbl_user u1
    on a.owner=u1.id
    join tbl_contacts_activity_relation car
    on a.id=car.activity_id
    where car.contacts_id=#{contactsId}
  </select>

  <select id="selectActivityListByName" parameterType="String" resultMap="BaseResultMap">
      select
          a.id,
          u1.name as owner,
          a.name,
          a.start_date,
          a.end_date,
          a.cost,
          a.description,
          a.create_time,
          u2.name as create_by,
          a.edit_time,
          u3.name as edit_by
      from tbl_activity a
      join tbl_user u1
      on a.owner=u1.id
      join tbl_user u2
      on a.create_by=u2.id
      left join tbl_user u3
      on a.edit_by=u3.id
      where a.name like concat('%',#{name},'%')
      order by a.create_time desc
  </select>

  <!--根据名称和关联的线索id模糊查询市场活动-->
  <select id="selectActivityByNameAndClueId" parameterType="map" resultMap="BaseResultMap">
      select
          a.id,
          u1.name as owner,
          a.name,
          a.start_date,
          a.end_date,
          a.cost,
          a.description,
          a.create_time,
          u2.name as create_by,
          a.edit_time,
          u3.name as edit_by
      from tbl_activity a
      join tbl_user u1
      on a.owner=u1.id
      join tbl_user u2
      on a.create_by=u2.id
      left join tbl_user u3
      on a.edit_by=u3.id
      join tbl_clue_activity_relation car
      on a.id=car.activity_id
      where car.clue_id=#{clueId}
      and a.name like concat('%',#{name},'%')
      order by a.create_time desc
  </select>

  <!--根据名称模糊查询市场活动-->
  <select id="selectActivityByName" parameterType="String" resultMap="BaseResultMap">
      select
          a.id,
          u1.name as owner,
          a.name,
          a.start_date,
          a.end_date,
          a.cost,
          a.description,
          a.create_time,
          u2.name as create_by,
          a.edit_time,
          u3.name as edit_by
      from tbl_activity a
      join tbl_user u1
      on a.owner=u1.id
      join tbl_user u2
      on a.create_by=u2.id
      left join tbl_user u3
      on a.edit_by=u3.id
      left join tbl_clue_activity_relation car
      on a.id=car.activity_id
      where a.name like concat('%',#{name},'%')
      and car.clue_id is null
  </select>

  <!--通过线索id查询市场活动-->
  <select id="selectActivityByClueId" parameterType="String" resultMap="BaseResultMap">
      select
          a.id,
          u1.name as owner,
          a.name,
          a.start_date,
          a.end_date,
          a.cost,
          a.description,
          a.create_time,
          u2.name as create_by,
          a.edit_time,
          u3.name as edit_by
      from tbl_activity a
      join tbl_user u1
      on a.owner=u1.id
      join tbl_user u2
      on a.create_by=u2.id
      left join tbl_user u3
      on a.edit_by=u3.id
      join tbl_clue_activity_relation car
      on a.id=car.activity_id
      where car.clue_id=#{clueId}
  </select>

  <!--根据市场活动的id查找市场活动信息-->
  <select id="selectActivityForDetailById" parameterType="String" resultMap="BaseResultMap">
    select
        a.id,
        u1.name as owner,
        a.name,
        a.start_date,
        a.end_date,
        a.cost,
        a.description,
        a.create_time,
        u2.name as create_by,
        a.edit_time,
        u3.name as edit_by
    from tbl_activity a
    join tbl_user u1
    on a.owner=u1.id
    join tbl_user u2
    on a.create_by=u2.id
    left join tbl_user u3
    on a.edit_by=u3.id
    where a.id=#{id}
  </select>

  <!--批量导入市场活动-->
  <insert id="insertActivityByList" parameterType="Activity">
    insert into tbl_activity
    values
    <foreach collection="list" item="a" separator=",">
       (
          #{a.id},
          #{a.owner},
          #{a.name},
          #{a.startDate},
          #{a.endDate},
          #{a.cost},
          #{a.description},
          #{a.createTime},
          #{a.createBy},
          #{a.editTime},
          #{a.editBy}
      )
    </foreach>
  </insert>

  <!--根据1个以上的id查找市场活动信息-->
  <select id="selectActivityByIds" parameterType="String" resultMap="BaseResultMap">
    select
        a.id,
        u1.name as owner,
        a.name,
        a.start_date,
        a.end_date,
        a.cost,
        a.description,
        a.create_time,
        u2.name as create_by,
        a.edit_time,
        u3.name as edit_by
    from tbl_activity a
    join tbl_user u1
    on a.owner=u1.id
    join tbl_user u2
    on a.create_by=u2.id
    left join tbl_user u3
    on a.edit_by=u3.id
    where a.id in
    <foreach collection="array" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
    order by a.create_time desc
  </select>

  <!--查询所有市场活动信息-->
  <select id="selectAllActivities" resultMap="BaseResultMap">
    select
        a.id,
        u1.name as owner,
        a.name,
        a.start_date,
        a.end_date,
        a.cost,
        a.description,
        a.create_time,
        u2.name as create_by,
        a.edit_time,
        u3.name as edit_by
    from tbl_activity a
    join tbl_user u1
    on a.owner=u1.id
    join tbl_user u2
    on a.create_by=u2.id
    left join tbl_user u3
    on a.edit_by=u3.id
    order by a.create_time desc
  </select>

  <!--根据市场活动id修改指定的市场活动数据-->
  <update id="updateActivityById" parameterType="Activity">
    update tbl_activity
    set
      owner=#{owner},
      name=#{name},
      start_date=#{startDate},
      end_date=#{endDate},
      cost=#{cost},
      description=#{description},
      edit_time=#{editTime},
      edit_by=#{editBy}
    where id=#{id}
  </update>

  <!--根据市场活动的id查找市场活动信息-->
  <select id="selectActivityById"  parameterType="String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from tbl_activity
    where id=#{id}
  </select>

  <!--根据市场活动id组成的数组批量删除市场活动信息。-->
  <delete id="deleteActivityByIds" parameterType="String">
    delete from tbl_activity
    where id in
    <foreach collection="array" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>

  <!--根据条件查询市场活动的总条数-->
  <select id="selectCountOfActivityByCondition" parameterType="map" resultType="int">
    select count(*)
    from tbl_activity a
    join tbl_user u
    on a.owner=u.id
    <where>
      <if test="name != null and name != ''">
        and a.name like concat('%',#{name},'%')
      </if>
      <if test="owner != null and owner !=''">
        and u.name like concat('%',#{owner},'%')
      </if>
      <if test="startDate != null and startDate != ''">
        and a.start_date &gt;= #{startDate}
      </if>
      <if test="endDate != null and endDate != ''">
        and a.end_date &lt;= #{endDate}
      </if>
    </where>
  </select>

  <!--根据条件分页查询市场活动的列表-->
  <select id="selectActivityByConditionForPage" parameterType="map" resultMap="BaseResultMap">
    select
        a.id,
        u1.name as owner,
        a.name,
        a.start_date,
        a.end_date,
        a.cost,
        a.description,
        a.create_time,
        u2.name as create_by,
        a.edit_time,
        u3.name as edit_by
    from tbl_activity a
    join tbl_user u1
    on a.owner=u1.id
    join tbl_user u2
    on a.create_by=u2.id
    left join tbl_user u3
    on a.edit_by=u3.id
    <where>
      <if test="name != null and name != ''">
        and a.name like concat('%',#{name},'%')
      </if>
      <if test="owner != null and owner !=''">
        and u1.name like concat('%',#{owner},'%')
      </if>
      <if test="startDate != null and startDate != ''">
        and a.start_date &gt;= #{startDate}
      </if>
      <if test="endDate != null and endDate != ''">
        and a.end_date &lt;= #{endDate}
      </if>
    </where>
    order by a.create_time desc
    limit #{beginNo},#{pageSize}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 21 09:20:33 CST 2022.
    -->
    select
    <include refid="Base_Column_List" />
    from tbl_activity
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 21 09:20:33 CST 2022.
    -->
    delete from tbl_activity
    where id = #{id,jdbcType=CHAR}
  </delete>

  <insert id="insertActivity" parameterType="com.atom.crm.workbench.bean.Activity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 21 09:20:33 CST 2022.
    -->
    insert into tbl_activity (
            id,
            owner,
            name,
            start_date,
            end_date,
            cost,
            description,
            create_time,
            create_by
            )
    values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{startDate,jdbcType=CHAR},
      #{endDate,jdbcType=CHAR}, #{cost,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
      #{createTime,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.atom.crm.workbench.bean.Activity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 21 09:20:33 CST 2022.
    -->
    insert into tbl_activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="startDate != null">
        startDate,
      </if>
      <if test="endDate != null">
        endDate,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createBy != null">
        createBy,
      </if>
      <if test="editTime != null">
        editTime,
      </if>
      <if test="editBy != null">
        editBy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=CHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null">
        #{editBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.atom.crm.workbench.bean.Activity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 21 09:20:33 CST 2022.
    -->
    update tbl_activity
    <set>
      <if test="owner != null">
        owner = #{owner,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        startDate = #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null">
        endDate = #{endDate,jdbcType=CHAR},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        createBy = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        editTime = #{editTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null">
        editBy = #{editBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atom.crm.workbench.bean.Activity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 21 09:20:33 CST 2022.
    -->
    update tbl_activity
    set owner = #{owner,jdbcType=CHAR},
      name = #{name,jdbcType=VARCHAR},
      startDate = #{startDate,jdbcType=CHAR},
      endDate = #{endDate,jdbcType=CHAR},
      cost = #{cost,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=CHAR},
      createBy = #{createBy,jdbcType=VARCHAR},
      editTime = #{editTime,jdbcType=CHAR},
      editBy = #{editBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>
